from Stack import Stack
from lab04 import solveMaze
def test_example():
	maze = [
['+','+','+','+','+','+'],
['+',' ','+',' ',' ','G'],
['+',' ',' ',' ','+','+'],
['+',' ','+','+',' ','+'],
['+',' ',' ',' ',' ','+'],
['+','+','+','+','+','+'] ]
	assert solveMaze(maze, 4, 4) == True
	assert maze == [
['+', '+', '+', '+', '+', '+'],
['+', 8, '+', 11, 12, 'G'],
['+', 7, 9, 10, '+', '+'],
['+', 6, '+', '+', 2, '+'],
['+', 5, 4, 3, 1, '+'],
['+', '+', '+', '+', '+', '+'] ]

def test_nearest_path():
	maze = [
['+','+','+','+','+','+'],
['+',' ','+',' ',' ','G'],
['+',' ',' ',' ','+','+'],
['+',' ',' ','+',' ','+'],
['+',' ',' ',' ',' ','+'],
['+','+','+','+','+','+'] ]
	assert solveMaze(maze, 4, 4) == True
	assert maze == [
        ['+', '+', '+', '+', '+', '+'],
        ['+', ' ', '+', 8, 9, 'G'],
        ['+', ' ', 6, 7, '+', '+'],
        ['+', ' ', 5, '+', 2, '+'],
        ['+', ' ', 4, 3, 1, '+'],
        ['+', '+', '+', '+', '+', '+']]

def test_no_wall():
    maze = [
        [' ', ' ', ' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ', ' ', 'G'],
        [' ', ' ', ' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ', ' ', ' ']]
    assert solveMaze(maze, 4, 4) == True
    assert maze == [
        [' ', ' ', ' ', ' ', 5, 6],
        [' ', ' ', ' ', ' ', 4, 'G'],
        [' ', ' ', ' ', ' ', 3, ' '],
        [' ', ' ', ' ', ' ', 2, ' '],
        [' ', ' ', ' ', ' ', 1, ' '],
        [' ', ' ', ' ', ' ', ' ', ' ']]

def test_no_path_exists():
    maze = [
        ['+', '+', '+', '+', '+', '+'],
        ['+', ' ', '+', ' ', '+', 'G'],
        ['+', ' ', ' ', ' ', '+', '+'],
        ['+', ' ', '+', '+', ' ', '+'],
        ['+', ' ', ' ', ' ', ' ', '+'],
        ['+', '+', '+', '+', '+', '+']]
    assert solveMaze(maze, 4, 4) == False
    assert maze == [
        ['+', '+', '+', '+', '+', '+'],
        ['+', 8, '+', 11, '+', 'G'],
        ['+', 7, 9, 10, '+', '+'],
        ['+', 6, '+', '+', 2, '+'],
        ['+', 5, 4, 3, 1, '+'],
        ['+', '+', '+', '+', '+', '+']]